name: Build Android APK Delivery To Release

on:
  workflow_dispatch:
    inputs:
      repository:
        description: "URL repositori Git"
        required: true
        default: "https://github.com/android/sunflower"
      jdkVersion:
        description: "Versi OpenJDK yang digunakan: 8 / 11 / 17, dll."
        required: false
        default: "11"
      taskName:
        description: "Nama tugas dalam build.gradle: assemble[Flavor]Debug"
        required: false
        default: "assembleDebug"

jobs:
  build:
    runs-on: ubuntu-latest # Android SDK sudah terpasang dalam gambar ini
    steps:
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: ${{ github.event.inputs.jdkVersion }}

      - name: Clone project
        run: git clone --depth=1 ${{ github.event.inputs.repository }} workspace

      - name: Build APK
        working-directory: ./workspace
        run: |
          if [ ! -f "gradlew" ]; then gradle wrapper; fi
          chmod +x gradlew
          ./gradlew ${{ github.event.inputs.taskName }} --stacktrace

      - name: Move APK to root folder
        working-directory: ./workspace
        run: |
          mv app/build/outputs/apk/debug/*.apk ../app-debug.apk

      - name: Get Latest Release
        id: get_latest_release
        uses: actions/github-script@v4
        with:
          script: |
            const { data } = await github.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            console.log(data.tag_name);
            core.setOutput("latest_tag", data.tag_name);

      - name: Increment Tag
        id: increment_tag
        run: echo "::set-output name=new_tag::$(echo "${{ steps.get_latest_release.outputs.latest_tag }}" | awk -F. -v OFS=. '{$NF++; print}')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.increment_tag.outputs.new_tag }}
          release_name: Release ${{ steps.increment_tag.outputs.new_tag }}
          draft: false
          prerelease: false

      - name: Upload the APK artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/app-debug.apk
          name: apk-archive
          if-no-files-found: warn

      - name: Add APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/app-debug.apk
          asset_name: ${{ github.run_id }}.apk
          asset_content_type: application/vnd.android.package-archive
